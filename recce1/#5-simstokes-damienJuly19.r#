### Simulating ironX and DISTANCE sampling
## rm(list = ls())
setwd("/Users/sarah/Rprojects/recce1/")
source("func-ironX0.r")
source("func-movereplicateIronX.r")
source("func-samplingstokes.r")
source("func-pointdistanceALL.r")
source("func-rotmove.r")
source("func-simIXRstokes.r")
source("func-simIXTstokes.r")
source("func-simd.r")

w=.001 #.002999 #half-width of sampling walk
f10=3 #frequency of random walk sine curve
A10=0.25 #amplitude of random walk in km
yp10<-function(x) A10*sin(x*f10*pi/10) + w #lines(x,ym10(x),type="l")
ym10<-function(x) A10*sin(x*f10*pi/10) - w #lines(x,yp10(x),type="l")
curve10<-seq(-10,10,by=.01) #sequence for plotting sin curves
f8=2 #frequency of random walk sine curve
A8=0.1 #amplitude of random walk in km
yp8<-function(x) A8*sin(x*f8*pi/3.826834) + w #lines(x,ym8(x),type="l") 7.653669/2
ym8<-function(x) A8*sin(x*f8*pi/3.826834) - w #lines(x,yp8(x),type="l")
curve8<-seq(-7.653669/2,7.653669/2,by=0.01)
i1area<-4*(integrate(yp10,-10,10)[[1]] - integrate (ym10,-10,10)[[1]])+ 4*(integrate(yp8,0,7.65366)[[1]] - integrate (ym8,0,7.65366)[[1]]) #area between
                                        #2 curves for 20 k segments
                                        #and between 2 curves 7.6 km
darea<-2*16*0.002  #area under distance transects



###################Simulations####

sims<-function(n,sampledf,ironX0,w,yp10,ym10,yp8,ym8,i1area,darea)
{
    results<-matrix(nrow=n,ncol=7)
    colnames(results) <- c("run","isamples","iedays","iegord","dsamples","dedays","degord")
    filenames<-paste("r5e5_",1:n,".jpeg",sep="")
    init<-list()
    for (i in 1:n){
##################### 110.61 km x 1 IronX, n =  number of points
        init[[1]] <- sampledf
        results[i,1]<-i
        init[[2]] <- ironX0    #input pattern df
        init[[3]] <- nironXs <- 1 #count of ironXs on the landscape
        init[[4]] <- w
        ir1  <- simulate(init)
        ##save(ir1, file = "bi1n5e5r1.rda") #n=26
        results[i,2] <-nrow(ir1[[8]]) + nrow(ir1[[10]]) ##isamples
        results [i,3] <- 1 * 110.61 * .25 ##iedays
        results [i,4] <-  (results[i,2]/60)/i1area   ##iegord
##################### 2km x 16 Distance transects ala Stokes 2010
        inputs<-list()
        inputs[[1]] <- sampledf
        xseed<-sample(seq(0,10,0.002),1)  #set random start for transects
        study.area=owin(xrange=c(xseed,xseed+2),yrange=c(0,65)) #one vertical set of transects
        inputs[[2]]<- create.lines(study.area,nlines=4,width=.002,spacing=100,angle=180)
        dr1 <-distancesim(inputs)
        results[i,5] <-nrow(dr1[[10]]) ##dsamples
        results[i,6] <-16*2*(4/3)  ##dedays
        results[i,7] <-(results[i,5]/60)/darea  ##degord
        ##        quartz()
        ##        plot(c(0,65),c(0,65),type="n")
        ##        dog<-ir1
        ##        points(sampledf[,2:3],pch=19,cex=.01)
        ##        points(dog[[8]][,5:6],pch=19,col="red") #sampled points
        ##        points(dog[[10]][,5:6],pch=19,col="red") #sampled points
        ##matplot(t(dog[[3]][,c(1,3)]),t(dog[[3]][,c(2,4)]),type='l',add=TRUE,col="red",lty=1)
        ## Plotting Distance transects
        ##        test<-dr1
        ##        plot(test[[4]] $lines,lty=1, add=TRUE,col="blue")
        ##        points(test[[10]][,2:3],pch=19,col="blue")
    }
    gord<-rep(dim(sampledf)[1]/60/(65^2),n)
    out <- cbind(gord,results)
    return(out)
}



#####################


############### Plotting ##
## Plotting IronX
out<-ir1
quartz()

pdf(file="test.jpg")
plot(c(0,65),c(0,65),type="n")
points(out[[8]][,5:6],pch=19,col="red") #sampled points
points(out[[10]][,5:6],pch=19,col="red") #sampled points
matplot(t(out[[3]][,c(1,3)]),t(out[[3]][,c(2,4)]),type='l',add=TRUE,col="red",lty=1)
## Plotting Distance transects
test<-dr1
plot(test[[4]] $lines,lty=1, add=TRUE,col="blue")
points(test[[10]][,2:3],pch=19,col="blue")
dev.off()


device$print("test.jpg")
}

